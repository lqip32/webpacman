%%%-------------------------------------------------------------------
%%% @author ndyumin
%%% @copyright (C) 2016, <COMPANY>
%%% @doc
%%%
%%% @end
%%% Created : 11. Янв. 2016 18:17
%%%-------------------------------------------------------------------
-module(map).
-author("ndyumin").

%% API
-export([start/0, stop/0]).

%% 140 bonus (former 4)
%% 299 (former 0)
%% 230 (former 3)
get_initial() ->
  from_matrix([
    [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200],
    [200, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 100, 100, 100, 100, 100, 100, 200],
    [200, 140, 200, 200, 100, 200, 200, 200, 100, 200, 100, 200, 200, 200, 100, 200, 200, 140, 200],
    [200, 100, 200, 200, 100, 200, 200, 200, 100, 200, 100, 200, 200, 200, 100, 200, 200, 100, 200],
    [200, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 200],
    [200, 100, 200, 200, 100, 200, 100, 200, 200, 200, 200, 200, 100, 200, 100, 200, 200, 100, 200],
    [200, 100, 100, 100, 100, 200, 100, 100, 100, 200, 100, 100, 100, 200, 100, 100, 100, 100, 200],
    [200, 200, 200, 200, 100, 200, 200, 200, 100, 200, 100, 200, 200, 200, 100, 200, 200, 200, 200],
    [230, 230, 230, 200, 100, 200, 100, 100, 100, 100, 100, 100, 100, 200, 100, 200, 230, 230, 230],
    [200, 200, 200, 200, 100, 200, 100, 200, 200, 230, 200, 200, 100, 200, 100, 200, 200, 200, 200],
    [299, 299, 299, 299, 100, 100, 100, 200, 230, 230, 230, 200, 100, 100, 100, 299, 299, 299, 299],
    [200, 200, 200, 200, 100, 200, 100, 200, 200, 200, 200, 200, 100, 200, 100, 200, 200, 200, 200],
    [230, 230, 230, 200, 100, 200, 100, 100, 100, 299, 100, 100, 100, 200, 100, 200, 230, 230, 230],
    [200, 200, 200, 200, 100, 200, 100, 200, 200, 200, 200, 200, 100, 200, 100, 200, 200, 200, 200],
    [200, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 100, 100, 100, 100, 100, 100, 100, 200],
    [200, 100, 200, 200, 100, 200, 200, 200, 100, 200, 100, 200, 200, 200, 100, 200, 200, 100, 200],
    [200, 140, 100, 200, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 200, 100, 140, 200],
    [200, 200, 100, 200, 100, 200, 100, 200, 200, 200, 200, 200, 100, 200, 100, 200, 100, 200, 200],
    [200, 100, 100, 100, 100, 200, 100, 100, 100, 200, 100, 100, 100, 200, 100, 100, 100, 100, 200],
    [200, 100, 200, 200, 200, 200, 200, 200, 100, 200, 100, 200, 200, 200, 200, 200, 200, 100, 200],
    [200, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 200],
    [200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200]
  ]).

from_matrix(Matrix) ->
  Lines = lists:map(fun(Line) -> array:from_list(Line) end, Matrix),
  array:from_list(Lines).

to_matrix(Array) ->
  Lines = array:to_list(Array),
  lists:map(fun(Line) -> array:to_list(Line) end, Lines).

set(X, Y, Value, Map) ->
  array:set(Y, array:set(X, Value, array:get(Y, Map)), Map).

start() ->
  MapLoop = spawn(fun() -> map_update_loop(get_initial()) end),
  gproc:reg_other({r, l, map}, MapLoop).

stop() ->
  erlang:error(not_implemented).

map_update_loop(Map) ->
  receive
    {get, Clb} ->
      Clb(to_matrix(Map)),
      map_update_loop(Map);

    {get_at, {X, Y},  Clb} ->
      Clb(array:get(X, array:get(Y, Map))),
      map_update_loop(Map);

    {set, {X, Y}, Value} ->
      map_update_loop(set(X, Y, Value, Map))
  end.